########################################################################
# KPI extraction configuration 
# 
#  This part of the configuration file is defining which data to 
#  extract how to extract then and when.
# 
#  Static KPI are extracted once at rpimonitord startup. Each statistic 
#  is identified into the conf file by a line stating with the keyword
#  static and an identifier <static data id>
# 
#  Each static KPI is defined by an id and with 4 parameters
# 
#  static.<static data id>.name=<data name>
#    <data name> is a string representing the KPI or the list of KPI 
#    separated by comma. Each name has to be unique.
#    Only alpha numerical charter and underscore are accepted.
# 
#  static.<static data id>.source=<data source>
#    <data source> is a file or an executable file within the path. 
#    If the file exists, rpimonitord will read its content. If the file
#    is not existing, rpimonirotd will try to execute it and will parse 
#    the output. 
#    Warning: specifying an executable by its absolute name will tell
#    rpimonitord to read the content of the executable.1.graph.
# 
#  static.<static data id>.regexp=<data regexp>
#    <data regexp> is the regular expression extracting information from
#    data source. Regexp groups () has to be used to extract the data
#    In case of KPI list, each group will be affected to a KPI name.
# 
#  static.<static data id>.postprocess=<data postprocess>
#    <data postprocess> is an expression defining the postprocessing to 
#    be applied on result. KPI are idendified by $1. In case of list,
#    other KPI are identified by $2, $3 .graph..
#    This parameter will be evaluate by the command eval of perl. 
# 
#  Dynamic KPI are extracted periodically (defined by daemon.delay)
#  Each statistic is identified into the conf file by a line stating 
#  with the keyword dynamic and an identifier <dynamic data id>
#  
#  Each dynamic KPI is defined by an id and with 5 parameters
# 
#  dynamic.<dynamic data id>.name=<data name>
#  dynamic.<dynamic data id>.source=<data source>
#  dynamic.<dynamic data id>.regexp=<data regexp>
#  dynamic.<dynamic data id>.postprocess=<data postprocess>
#    <data name>, <data source>, <data regexp>, <data postprocess> 
#    This 4 first parameters have the same signification as for static 
#    parameters.
# 
#  dynamic.<dynamic data id>.rrd=<|GAUGE|COUNTER|DERIVE|ABSOLUTE|COMPUTE>
#    The 5th parameter is defining if the KPI has to be stored into a RRD
#    database and how <|GAUGE|COUNTER|DERIVE|ABSOLUTE|COMPUTE>. If the 
#    parameter is defined as empty, no RRD database will be created. If 
#    this parameter is defined, a RRD database will be created and data 
#    will be stored at every extraction. 
#    Ref http://oss.oetiker.ch/rrdtool/doc/rrdcreate.en.html for RRD 
#    parameter description.
# 
########################################################################
static.1.name=distribution
static.1.source=/etc/os-release
static.1.regexp=PRETTY_NAME.\"(.*)\"
static.1.postprocess=

static.2.name=kernel_version
static.2.source=uname -msr
static.2.regexp=(.*)
static.2.postprocess=

static.3.name=firmware
static.3.source=/proc/version
static.3.regexp=(#\d+)
static.3.postprocess=

static.4.name=processor
static.4.source=/proc/cpuinfo
static.4.regexp=Processor\s+: (.*)
static.4.postprocess=

static.5.name=scaling_governor
static.5.source=/sys/devices/system/cpu/cpu0/cpufreq/scaling_governor
static.5.regexp=(.*)
static.5.postprocess=

static.6.name=memory_total
static.6.source=/proc/meminfo
static.6.regexp=MemTotal:\s+(\d+)
static.6.postprocess=$1/1024

static.7.name=swap_total
static.7.source=/proc/meminfo
static.7.regexp=SwapTotal:\s+(\d+)
static.7.postprocess=$1/1024

static.8.name=sdcard_root_total
static.8.source=df -t ext4
static.8.regexp=root\s+(\d+)
static.8.postprocess=$1/1024

static.9.name=sdcard_boot_total
static.9.source=df -t vfat
static.9.regexp=mmcblk0p1\s+(\d+)
static.9.postprocess=$1/1024

##############################################################################
dynamic.1.name=upgrade
dynamic.1.source=/usr/share/rpimonitor/updatestatus.txt
dynamic.1.regexp=(\d+ upgraded, \d+ .*|.*&nbsp;.*)
dynamic.1.postprocess=
dynamic.1.rrd=

dynamic.2.name=upgrade
dynamic.2.source=/usr/share/rpimonitor/updatestatus.txt
dynamic.2.regexp=(\d+ upgraded, \d+ .*|.*&nbsp;.*)
dynamic.2.postprocess=
dynamic.2.rrd=

dynamic.3.name=packages
dynamic.3.source=/usr/share/rpimonitor/updatestatus.txt
dynamic.3.regexp=^  (.*)\d+ upgraded,
dynamic.3.postprocess=
dynamic.3.rrd=

dynamic.4.name=cpu_frequency
dynamic.4.source=/sys/devices/system/cpu/cpu0/cpufreq/cpuinfo_cur_freq
dynamic.4.regexp=(.*)
dynamic.4.postprocess=$1/1000
dynamic.4.rrd=

dynamic.5.name=cpu_voltage
dynamic.5.source=vcgencmd measure_volts core
dynamic.5.regexp=(\d+.\d+)V
dynamic.5.postprocess=
dynamic.5.rrd=

dynamic.6.name=load1,load5,load15
dynamic.6.source=/proc/loadavg
dynamic.6.regexp=^(\S+)\s(\S+)\s(\S+)
dynamic.6.postprocess=
dynamic.6.rrd=GAUGE

dynamic.7.name=sdcard_root_free
dynamic.7.source=df -t ext4
dynamic.7.regexp=root\s+\d+\s+\d+\s+(\d+)
dynamic.7.postprocess=$1/1024
dynamic.7.rrd=GAUGE

dynamic.8.name=sdcard_boot_free
dynamic.8.source=df -t vfat
dynamic.8.regexp=mmcblk0p1\s+\d+\s+\d+\s+(\d+)
dynamic.8.postprocess=$1/1024
dynamic.8.rrd=GAUGE

dynamic.9.name=swap_free
dynamic.9.source=/proc/meminfo
dynamic.9.regexp=SwapFree:\s+(\d+)
dynamic.9.postprocess=$1/1024
dynamic.9.rrd=GAUGE

dynamic.10.name=memory_free
dynamic.10.source=/proc/meminfo
dynamic.10.regexp=MemFree:\s+(\d+)
dynamic.10.postprocess=$1/1024
dynamic.10.rrd=GAUGE

dynamic.11.name=net_received
dynamic.11.source=/sys/class/net/eth0/statistics/rx_bytes
dynamic.11.regexp=(.*)
dynamic.11.postprocess=
dynamic.11.rrd=DERIVE

dynamic.12.name=net_send
dynamic.12.source=/sys/class/net/eth0/statistics/tx_bytes
dynamic.12.regexp=(.*)
dynamic.12.postprocess=
dynamic.12.rrd=DERIVE

dynamic.13.name=soc_temp
dynamic.13.source=/sys/devices/virtual/thermal/thermal_zone0/temp
dynamic.13.regexp=(.*)
dynamic.13.postprocess=$1/1000
dynamic.13.rrd=GAUGE

dynamic.14.name=uptime
dynamic.14.source=/proc/uptime
dynamic.14.regexp=^(\S+)
dynamic.14.postprocess=
dynamic.14.rrd=GAUGE

########################################################################
# Web interface configuration
# 
#  Friends are defining a displayed name and a link reachable from a
#  top left menu visible if at least one friends is configured. Each 
#  friend is identified by its <id> and is described by the 2 following
#  parameters
# 
#  web.friends.<id>.name=<display name>
#  web.friends.<id>.link=<link to RPi-Monitor> 
#  
#  web.friends.<id>.name=<display name>  
#    <display name> is the name printed into the drop down menu
# 
#  web.friends.<id>.link=<link to RPi-Monitor>
#    <link to RPi-Monitor> is the link to another RPi-Monitor running 
#    into the friend machine.
# 
# 
#  The status page is fully configurable. Only page with <page id> equal
#  to 1 is taken in account in this version of RPi-Monitor. <page name>
#  is also not taken in account in this version.
# 
#  web.status.<page id>.name=<page name>
# 
#  Status page is split in strips displaying information. Each status 
#  strip is identified by a unique <status id>. Each status strip is
#  defined by a name, an icon and a serie of lines described as follow: 
# 
#  web.status.<page id>.content.<status id>.name=<display name>
#  web.status.<page id>.content.<status id>.icon=<display icon>
#  web.status.<page id>.content.<status id>.line.<line number>=<parameter>
# 
#  web.status.<page id>.content.<status id>.name=<display name>
#    <display name> Name displayed as title of the strip
# 
#  web.status.<page id>.content.<status id>.icon=<display icon>
#    <display icon> Icon of the strip
# 
#  web.status.<page id>.content.<status id>.line.<line number>=<parameter>
#    <line number> represent the position of the line within the strip. 
#    This number has to be unique within the strip.
#    <parameter> is describing the content of the line. This parameter 
#    will be evaluated by the javascript command with the function 
#    eval() theirfore parameter should be valid javacript.
#    To have  clean rendering, RPi-Monitor web interface provides some 
#    functions that could be used inside the parameter. The object data
#    is also available and contains the result of dynamic and static 
#    extracted as described in the KPI extraction section. 
# 
#    Functions provided by RPi-Monitor are the following: 
# 
#       Uptime(uptime in sec)
#         Print the uptime from seconds to the following format:
#         XX year XX days XX hours XX minutes XX seconds 
# 
#       Pad(value)
#         Add a prefixed 0 for number smaller than 10
# 
#       KMG(value, pre)
#         Print value in kilo, Mega, Giga, Peta. 
#         pre can be 'k', 'M', 'G' or 'P' depending on the value. 
# 
#       Percent(value,total)
#         Print percentage of value compared to total
# 
#       ProgressBar(value,total)
#         Draw a progressbar representing the value compared to total.
#         [=========------------]
# 
#       Plural (value)
#         Print 's ' if value > 1 or ' ' if not.
# 
#       Clock(data.localtime)    
#         This function is a little bit particular and should be written
#         and should be written exactly as in the upper line. It will 
#         display on screen the current time and will simulate the 
#         seconds by incrementing them tperiodically.
# 
# 
#  The statistic page is fully configurable. Only page with <page id> equal
#  to 1 is taken in account in this version of RPi-Monitor. <page name>
#  is also not taken in account in this version.
# 
#  web.statistics.<page id>.name=<page name>
# 
#  The statistic page displays statistics graphs. The graphs are 
#  identified an unique <statistic id> and by the following parameters.
# 
#  web.statistics.<page id>.content.<statistic id>.name=<statistic name>
#    <statistic name> is the name of the statistics displayed in the
#    top left drop down list.
# 
#  web.statistics.<page id>.content.<statistic id>.graph.<rrd id>=<data name>
#    <rrd id> is identifying the graph and is unique per <statistic id>
#    <data name> is the name of the dynamic and static extracted as 
#    described in the KPI extraction section. 
# 
#  web.statistics.<page id>.content.<statistic id>.ds_graph_opts.<data name>.label=<label>
#    <data name> same as the previous <data name>
#    <label> Label to display in legends. It is possible to setup other parameters 
#    of ds_graph_opts. refer to the following web page for details:
#    http://javascriptrrd.sourceforge.net/docs/javascriptrrd_v0.5.0/doc/lib/rrdFlot_js.html
#
#######################################################################

#web.friends.1.name=Raspberry Pi
#web.friends.1.link=http://192.168.0.123/
#web.friends.2.name=Shuttle
#web.friends.2.link=http://192.168.0.2/
#web.friends.3.name=Laptop
#web.friends.3.link=http://192.168.0.38/

#######################################################################
web.status.1.name=Raspberry Pi
web.status.1.content.1.name=Version
web.status.1.content.1.icon=version.png
web.status.1.content.1.line.1='Processor: <b>' + data.processor + '</b>'
web.status.1.content.1.line.2='Distribution: <b>'+ data.distribution + '</b>'
web.status.1.content.1.line.3='Kernel version: <b>' + data.kernel_version + '</b>'
web.status.1.content.1.line.4='Firmware: <b>' + data.firmware + '</b>'
web.status.1.content.1.line.5='Package(s) to be: <b>' + data.upgrade + '</b>' + ShowInfo('packages','Package update',data.packages)

web.status.1.content.2.name=Uptime
web.status.1.content.2.icon=uptime.png
web.status.1.content.2.line.1='Raspberry Pi time: <b>' + Clock( data.localtime) + "</b>" 
web.status.1.content.2.line.2="Uptime: " + Uptime(data.uptime)

web.status.1.content.3.name=CPU
web.status.1.content.3.icon=cpu.png
web.status.1.content.3.line.1="Loads: <b>" + data.load1 + "</b> [1min] - <b>" + data.load5 + "</b> [5min] - <b>" + data.load15 + "</b> [15min]"
web.status.1.content.3.line.2="CPU frequency: <b>" + data.cpu_frequency + "MHz</b> Voltage: <b>" + data.cpu_voltage + "V</b>"
web.status.1.content.3.line.3="Scaling governor: <b>" + data.scaling_governor + "</b>"

web.status.1.content.4.name=Temperature
web.status.1.content.4.icon=cpu_temp.png
web.status.1.content.4.line.1="Temperature: <b>"+data.soc_temp+"&deg;C</b>"

web.status.1.content.5.name=Memory
web.status.1.content.5.icon=memory.png
web.status.1.content.5.line.1="Used: <b>" + KMG(data.memory_total-data.memory_free,'M') + "</b> (<b>" + Percent(data.memory_free,data.memory_total,'M') + "</b>) Free: <b>" + KMG(data.memory_free,'M') + "</b> Total: <b>" + KMG(data.memory_total,'M') + "</b>"
web.status.1.content.5.line.2=ProgressBar(data.memory_total-data.memory_free,data.memory_total)

web.status.1.content.6.name=Swap
web.status.1.content.6.icon=swap.png
web.status.1.content.6.line.1="Used: <b>"+KMG(data.swap_total-data.swap_free,'M')+"</b> (<b>"+Percent(data.swap_free,data.swap_total,'M')+"</b>) Free: <b>"+KMG(data.swap_free,'M')+ "</b> Total: <b>"+ KMG(data.swap_total,'M') + "</b>"
web.status.1.content.6.line.2=ProgressBar(data.swap_total-data.swap_free,data.swap_total)

web.status.1.content.7.name=SD card
web.status.1.content.7.icon=sd.png
web.status.1.content.7.line.1="<b>/boot</b> Used: <b>"+KMG(data.sdcard_boot_total-data.sdcard_boot_free,'M')+"</b> (<b>"+Percent(data.sdcard_boot_free,data.sdcard_boot_total,'M')+"</b>) Free: <b>"+KMG(data.sdcard_boot_free,'M')+ "</b> Total: <b>"+ KMG(data.sdcard_boot_total,'M') +"</b>"
web.status.1.content.7.line.2=ProgressBar(data.sdcard_boot_total-data.sdcard_boot_free,data.sdcard_boot_total)
web.status.1.content.7.line.3="<b>/</b> Used: <b>"+KMG(data.sdcard_root_total-data.sdcard_root_free,'M') + "</b> (<b>" + Percent(data.sdcard_root_free,data.sdcard_root_total,'M')+"</b>) Free: <b>"+KMG(data.sdcard_root_free,'M')+ "</b> Total: <b>"+ KMG(data.sdcard_root_total,'M') + "</b>"
web.status.1.content.7.line.4=ProgressBar(data.sdcard_root_total-data.sdcard_root_free,data.sdcard_root_total)

web.status.1.content.8.name=Network
web.status.1.content.8.icon=network.png
web.status.1.content.8.line.1="Ethernet Sent: <b>"+KMG(data.net_send)+"<i class='icon-arrow-up'></i></b> Received: <b>"+KMG(data.net_received) + "<i class='icon-arrow-down'></i></b>"

#######################################################################
web.statistics.1.name=Raspberry Pi
web.statistics.1.content.1.name=CPU Loads
web.statistics.1.content.1.graph.1=load1
web.statistics.1.content.1.graph.2=load5
web.statistics.1.content.1.graph.3=load15
web.statistics.1.content.1.ds_graph_opts.load1.label=Load 1min 
web.statistics.1.content.1.ds_graph_opts.load5.label=Load 5min 
web.statistics.1.content.1.ds_graph_opts.load15.label=Load 15min 

web.statistics.1.content.2.name=Network
web.statistics.1.content.2.graph.1=net_send
web.statistics.1.content.2.graph.2=net_received
web.statistics.1.content.2.ds_graph_opts.net_send.label=Upload bandwidth (bits)
web.statistics.1.content.2.ds_graph_opts.net_received.label=Download bandwidth (bits)

web.statistics.1.content.3.name=Disks - root
web.statistics.1.content.3.graph.1=sdcard_root_free
web.statistics.1.content.3.graph.2=sdcard_root_total
web.statistics.1.content.3.ds_graph_opts.sdcard_root_free.label=Free space on / (MB)
web.statistics.1.content.3.ds_graph_opts.sdcard_root_total.label=Size / (MB)
web.statistics.1.content.3.ds_graph_opts.sdcard_root_free.lines={ fill: true }

web.statistics.1.content.4.name=Disks - boot
web.statistics.1.content.4.graph.1=sdcard_boot_free
web.statistics.1.content.4.ds_graph_opts.sdcard_boot_free.label=Free space on /boot (MB)
web.statistics.1.content.4.ds_graph_opts.sdcard_boot_free.lines={ fill: true }

web.statistics.1.content.5.name=Disk - swap
web.statistics.1.content.5.graph.1=swap_free
web.statistics.1.content.5.graph.2=swap_total
web.statistics.1.content.5.ds_graph_opts.swap_total.label=Swap size (MB)
web.statistics.1.content.5.ds_graph_opts.swap_free.label=Free space on swap (MB)
web.statistics.1.content.5.ds_graph_opts.swap_free.lines={ fill: true }

web.statistics.1.content.6.name=Memory
web.statistics.1.content.6.graph.1=memory_free
web.statistics.1.content.6.ds_graph_opts.memory_free.label=Free Memory (MB)

web.statistics.1.content.7.name=Uptime
web.statistics.1.content.7.graph.1=uptime
web.statistics.1.content.7.ds_graph_opts.uptime.label=Uptime (s)

web.statistics.1.content.8.name=Temperature
web.statistics.1.content.8.graph.1=soc_temp
web.statistics.1.content.8.ds_graph_opts.soc_temp.label=Core temperature (deg C)

