########################################################################
# Daemon configuration        
#
# This section is defining the behavior of rpimonitord. It define if
# embedded server should be started and its configuration.
#
########################################################################
# Define the delay between 2 kpi pooling (default:10)
# Note: If you want to change the default delay, the rrd file will have
# to be deleted rpimonitord will recreate them at next startup
#daemon.delay=10

# Define RRD database storage
# --> Idea: define here the RRD database configuration? 

# Define that rpimonitor shouldn't start web server (default:0)
#daemon.noserver=1

# Define the address used by the web server (default:0.0.0.0)
#daemon.addr=0.0.0.0

# Define port of the web server (default:8888)
daemon.port=8889

# Define user used to run the server process (default:pi)
# Note: If user is not existing, process will run with uid=1000
#daemon.user=pi

# Define group used to run the server process (default:pi)
# Note: If group is not existing, process will run with gid=1000
#daemon.group=pi

# Define the root directory of the web server (Default:./web)
#daemon.webroot=


########################################################################
# KPI extraction configuration 
#
# This part of the configuration file is defining which data to extract
# how to extract then and when.
#
# Static KPI are extracted once at rpimonitord startup.
# Dynamic KPI are extracted periodically (defined by daemon.delay)
#
# Each static KPI is defined by an id and with 4 parameters
# static.<static data id>.name=<data name>
# static.<static data id>.source=<data source>
# static.<static data id>.regexp=<data regexp>
# static.<static data id>.postprocess=<data postprocess>
#
# <static data id> is representing the id of the KPI
# <data name> is a string representing the KPI or the list of KPI 
#   separated by comma. Each name has to be unique.
#   Only alpha numerical charter and underscore are accepted.
# <data source> is a file or an executable file within the path. 
#   If the file exists, rpimonitord will read its content. If the file
#   is not existing, rpimonirotd will try to execute it and will parse 
#   the output. 
#   Warning: specifying an executable by its absolute name will tell
#   rpimonitord to read the content of the executable.1.graph.
# <data regexp> is the regular expression extracting information from
#   data source. Regexp groups () has to be used to extract the data
#   In case of KPI list, each group will be affected to a KPI name.
# <data postprocess> is an expression defining the postprocessing to 
#   be applied on result. KPI are idendified by $1. In case of list,
#   other KPI are identified by $2, $3 .graph..
#   This parameter will be evaluate by the command eval of perl. 
#
# Each dynamic KPI is defined by an id and with 5 parameters
# dynamic.<dynamic data id>.name=<data name>
# dynamic.<dynamic data id>.source=<data source>
# dynamic.<dynamic data id>.regexp=<data regexp>
# dynamic.<dynamic data id>.postprocess=<data postprocess>
# dynamic.<dynamic data id>.rrd=<|GAUGE|COUNTER|DERIVE|ABSOLUTE|COMPUTE>
#
# The 4 first parameters have the same signification as for static 
# parameters.
# The 5th parameter is defining if the KPI has to be stored into a RRD
# database and how. If ithe parameter is defined as empty, no RRD database
# will be created. If this parameter is defined, a RRD database will be
# created and data will be stored at every extraction. 
# Ref http://oss.oetiker.ch/rrdtool/doc/rrdcreate.en.html for RRD 
# parameter description.
#
########################################################################
static.1.name=distribution
static.1.source=/etc/os-release
static.1.regexp=PRETTY_NAME.\"(.*)\"
static.1.postprocess=

static.2.name=kernel_version
static.2.source=uname -msr
static.2.regexp=(.*)
static.2.postprocess=

static.3.name=firmware
static.3.source=/proc/version
static.3.regexp=(#\d+)
static.3.postprocess=

static.4.name=processor
static.4.source=/proc/cpuinfo
static.4.regexp=Processor\s+: (.*)
static.4.postprocess=

static.5.name=scaling_governor
static.5.source=/sys/devices/system/cpu/cpu0/cpufreq/scaling_governor
static.5.regexp=(.*)
static.5.postprocess=

static.6.name=memory_total
static.6.source=/proc/meminfo
static.6.regexp=MemTotal:\s+(\d+)
static.6.postprocess=$1/1024

static.7.name=swap_total
static.7.source=/proc/meminfo
static.7.regexp=SwapTotal:\s+(\d+)
static.7.postprocess=$1/1024

static.8.name=sdcard_root_total
static.8.source=df -t ext4
static.8.regexp=root\s+(\d+)
static.8.postprocess=$1/1024

static.9.name=sdcard_boot_total
static.9.source=df -t vfat
static.9.regexp=mmcblk0p1\s+(\d+)
static.9.postprocess=$1/1024

##############################################################################
dynamic.1.name=upgrade
dynamic.1.source=/usr/share/rpimonitor/updatestatus.txt
dynamic.1.regexp=(\d+ upgraded, \d+ .*|.*&nbsp;.*)
dynamic.1.postprocess=
dynamic.1.rrd=

dynamic.2.name=upgrade
dynamic.2.source=/usr/share/rpimonitor/updatestatus.txt
dynamic.2.regexp=(\d+ upgraded, \d+ .*|.*&nbsp;.*)
dynamic.2.postprocess=
dynamic.2.rrd=

dynamic.3.name=packages
dynamic.3.source=/usr/share/rpimonitor/updatestatus.txt
dynamic.3.regexp=^  (.*)\d+ upgraded,
dynamic.3.postprocess=
dynamic.3.rrd=

dynamic.4.name=cpu_frequency
dynamic.4.source=/sys/devices/system/cpu/cpu0/cpufreq/cpuinfo_cur_freq
dynamic.4.regexp=(.*)
dynamic.4.postprocess=
dynamic.4.rrd=

dynamic.5.name=cpu_voltage
dynamic.5.source=vcgencmd measure_volts core
dynamic.5.regexp=(\d+.\d+)V
dynamic.5.postprocess=
dynamic.5.rrd=

dynamic.6.name=load1,load5,load15
dynamic.6.source=/proc/loadavg
dynamic.6.regexp=^(\S+)\s(\S+)\s(\S+)
dynamic.6.postprocess=
dynamic.6.rrd=GAUGE

dynamic.7.name=sdcard_root_free
dynamic.7.source=df -t ext4
dynamic.7.regexp=root\s+\d+\s+\d+\s+(\d+)
dynamic.7.postprocess=$1/1024
dynamic.7.rrd=GAUGE

dynamic.8.name=sdcard_boot_free
dynamic.8.source=df -t vfat
dynamic.8.regexp=mmcblk0p1\s+\d+\s+\d+\s+(\d+)
dynamic.8.postprocess=$1/1024
dynamic.8.rrd=GAUGE

dynamic.9.name=swap_free
dynamic.9.source=/proc/meminfo
dynamic.9.regexp=SwapFree:\s+(\d+)
dynamic.9.postprocess=$1/1024
dynamic.9.rrd=GAUGE

dynamic.10.name=memory_free
dynamic.10.source=/proc/meminfo
dynamic.10.regexp=MemFree:\s+(\d+)
dynamic.10.postprocess=$1/1024
dynamic.10.rrd=GAUGE

dynamic.11.name=net_received
dynamic.11.source=/sys/class/net/eth0/statistics/rx_bytes
dynamic.11.regexp=(.*)
dynamic.11.postprocess=
dynamic.11.rrd=DERIVE

dynamic.12.name=net_send
dynamic.12.source=/sys/class/net/eth0/statistics/tx_bytes
dynamic.12.regexp=(.*)
dynamic.12.postprocess=
dynamic.12.rrd=DERIVE

dynamic.13.name=soc_temp
dynamic.13.source=/sys/devices/virtual/thermal/thermal_zone0/temp
dynamic.13.regexp=(.*)
dynamic.13.postprocess=$1/1000
dynamic.13.rrd=GAUGE

dynamic.14.name=uptime
dynamic.14.source=/proc/uptime
dynamic.14.regexp=^(\S+)
dynamic.14.postprocess=
dynamic.14.rrd=GAUGE

dynamic.15.name=living_room_temp
dynamic.15.source=/sys/devices/w1_bus_master1/28-000004fe1847/w1_slave
dynamic.15.regexp=t=(\d+)$
dynamic.15.postprocess=
dynamic.15.rrd=GAUGE


########################################################################
# Web interface configuration
#
# web.friends.<id>.name=<display name>
# web.friends.<id>.link=<link to RPi-Monitor>
#
# web.status.<page id>.name=<page name>
# web.status.<page id>.content.<status id>.name=<display name>
# web.status.<page id>.content.<status id>.icon=<display icon>
# web.status.<page id>.content.<status id>.line.<line number>=<parameter>
#
#   <functions> can be one of the following: 
#     text(text $1 text $2 $3)    -> text xxxx text xx xxx
#     clock(data.localtime)       -> xx:xx:xx
#     usage(free,total)           -> Used: xxxXB (xx.x%) Free: xxxXB Total: xxxXB
#     progressbar(value,total)    -> [=========------------]
#     sendrecieved(send,received) -> Sent: xxxXB Recieved: xxxXB
#
# web.statistic.<page id>.name=<page name>
# web.statistic.<page id>.content.<statistic id>.name=<statistic name>
# web.statistic.<page id>.content.<statistic id>.graph.<rrd id>=<data name>
#
#######################################################################

web.friends.1.name=Raspberry Pi
web.friends.1.link=http://192.168.0.123/
web.friends.2.name=Shuttle
web.friends.2.link=http://192.168.0.2/
web.friends.3.name=Laptop
web.friends.3.link=http://192.168.0.38/

#######################################################################
web.status.1.name=Raspberry Pi
web.status.1.content.1.name=Version
web.status.1.content.1.icon=version.png
web.status.1.content.1.line.1='Processor: <b>' + data.processor + '</b>'
web.status.1.content.1.line.2='Distribution: <b>'+ data.distribution + '</b>'
web.status.1.content.1.line.3='Kernel version: <b>' + data.kernel_version + '</b>'
web.status.1.content.1.line.4='Firmware: <b>' + data.firmware + '</b>'
web.status.1.content.1.line.5='Package: <b>' + data.upgrade + '</b>' + showInfo('packages','Package update',data.packages)

web.status.1.content.2.name=Uptime
web.status.1.content.2.icon=uptime.png
web.status.1.content.2.line.1='Raspberry Pi time: <b>' + clock( data.localtime) + "</b>" 
web.status.1.content.2.line.2="Uptime: " + uptime(data.uptime)

web.status.1.content.3.name=CPU
web.status.1.content.3.icon=cpu.png
web.status.1.content.3.line.1="Loads: <b>" + data.load1 + "</b> [1min] - <b>" + data.load5 + "</b> [5min] - <b>" + data.load15 + "</b> [15min]"
web.status.1.content.3.line.2="CPU frequency: <b>" + data.cpu_frequency + "</b> Voltage: <b>" + data.cpu_voltage + "V</b>"
web.status.1.content.3.line.3="Scaling governor: <b>" + data.scaling_governor + "</b>"

web.status.1.content.4.name=Temperature
web.status.1.content.4.icon=cpu_temp.png
web.status.1.content.4.line.1="Temperature: <b>"+data.soc_temp+" &deg;C</b>"

web.status.1.content.5.name=Memory
web.status.1.content.5.icon=memory.png
web.status.1.content.5.line.1="Used: <b>" + kmg(data.memory_total-data.memory_free,'M') + "</b> (<b>" + percent(data.memory_free,data.memory_total,'M') + "</b>) Free: <b>" + kmg(data.memory_free,'M') + "</b> Total: <b>" + kmg(data.memory_total,'M') + "</b>"
web.status.1.content.5.line.2=progressbar(data.memory_total-data.memory_free,data.memory_total)

web.status.1.content.6.name=Swap
web.status.1.content.6.icon=swap.png
web.status.1.content.6.line.1="Used: <b>"+kmg(data.swap_total-data.swap_free,'M')+"</b> (<b>"+percent(data.swap_free,data.swap_total,'M')+"</b>) Free: <b>"+kmg(data.swap_free,'M')+ "</b> Total: <b>"+ kmg(data.swap_total,'M') + "</b>"
web.status.1.content.6.line.2=progressbar(data.swap_total-data.swap_free,data.swap_total)

web.status.1.content.7.name=SD card
web.status.1.content.7.icon=sd.png
web.status.1.content.7.line.1="<b>/boot</b> Used: <b>"+kmg(data.sdcard_boot_total-data.sdcard_boot_free,'M')+"</b> (<b>"+percent(data.sdcard_boot_free,data.sdcard_boot_total,'M')+"</b>) Free: <b>"+kmg(data.sdcard_boot_free,'M')+ "</b> Total: <b>"+ kmg(data.sdcard_boot_total,'M') +"</b>"
web.status.1.content.7.line.2=progressbar(data.sdcard_boot_total-data.sdcard_boot_free,data.sdcard_boot_total)
web.status.1.content.7.line.3="<b>/</b> Used: <b>"+kmg(data.sdcard_root_total-data.sdcard_root_free,'M') + "</b> (<b>" + percent(data.sdcard_root_free,data.sdcard_root_total,'M')+"</b>) Free: <b>"+kmg(data.sdcard_root_free,'M')+ "</b> Total: <b>"+ kmg(data.sdcard_root_total,'M') + "</b>"
web.status.1.content.7.line.4=progressbar(data.sdcard_root_total-data.sdcard_root_free,data.sdcard_root_total)

web.status.1.content.8.name=Network
web.status.1.content.8.icon=network.png
web.status.1.content.8.line.1="Ethernet Sent: <b>"+kmg(data.net_send)+"<i class='icon-arrow-up'></i></b> Received: <b>"+kmg(data.net_received) + "<i class='icon-arrow-down'></i></b>"

#######################################################################
web.statistic.1.name=Raspberry Pi
web.statistic.1.content.1.name=CPU loads
web.statistic.1.content.1.graph.1=load1
web.statistic.1.content.1.graph.2=load5
web.statistic.1.content.1.graph.3=load15
web.statistic.1.content.1.ds_graph_opts.load1.label=load 1min 
web.statistic.1.content.1.ds_graph_opts.load5.label=load 5min 
web.statistic.1.content.1.ds_graph_opts.load15.label=load 15min 
#web.statistic.1.content.1.ds_graph_opts.load1.lines.show=true
#web.statistic.1.content.1.ds_graph_opts.load1.lines.fill=false
#web.statistic.1.content.1.ds_graph_opts.load1.lines.fillColor=#ffff80

web.statistic.1.content.2.name=Network
web.statistic.1.content.2.graph.1=net_send
web.statistic.1.content.2.graph.2=net_received
web.statistic.1.content.2.ds_graph_opts.net_send.label=Upload bandwidth (bits)
web.statistic.1.content.2.ds_graph_opts.net_received.label=Download bandwidth (bits)


web.statistic.1.content.3.name=Disk
web.statistic.1.content.3.graph.1=sdcard_root_free
web.statistic.1.content.3.graph.2=sdcard_boot_free
web.statistic.1.content.3.graph.3=swap_free
web.statistic.1.content.3.ds_graph_opts.sdcard_root_free.label=Free space on / (MB)
web.statistic.1.content.3.ds_graph_opts.sdcard_boot_free.label=Free space on /boot (MB)
web.statistic.1.content.3.ds_graph_opts.swap_free.label=Free space on swap (MB)

web.statistic.1.content.4.name=Memory
web.statistic.1.content.4.graph.1=memory_free
web.statistic.1.content.4.ds_graph_opts.memory_free.label=Free Memory (MB)

web.statistic.1.content.5.name=Uptime
web.statistic.1.content.5.graph.1=uptime
web.statistic.1.content.5.ds_graph_opts.uptime.label=Uptime (s)

web.statistic.1.content.6.name=Temperature
web.statistic.1.content.6.graph.1=soc_temp
web.statistic.1.content.6.ds_graph_opts.soc_temp.label=Core temperature (&deg;C)
